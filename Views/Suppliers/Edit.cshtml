@model SupplyChainManager.Models.Supplier

@{
    ViewData["Title"] = "Edit: " + Model.Name;
}

<h1>@ViewData["Title"]</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Document" class="control-label"></label>
                <input asp-for="Document" class="form-control" />
                <span asp-validation-for="Document" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SupplierType" class="control-label"></label>
                <div>
                    <input type="radio" value="1" asp-for="SupplierType" checked="@((int)Model.SupplierType == 1))" />Individual<br />
                    <input type="radio" value="2" asp-for="SupplierType" checked="@((int)Model.SupplierType == 2))" />Legal Entity<br />
                </div>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Active" /> @Html.DisplayNameFor(model => model.Active)
                </label>
            </div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <a class="btn btn-primary" asp-action="Index">Back to List</a> |
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
